# SPDX-License-Identifier: AGPL-3.0-or-later

[flake8]
ignore =
    D100, # Missing docstring in public module
    D101, # Missing docstring in public class
    D102, # Missing docstring in public method
    D103, # Missing docstring in public function
    D104, # Missing docstring in public package
    D106, # Missing docstring in public nested class
    D107, # Missing docstring in __init__
    D200, # One-line docstring should fit on one line with quotes
    D202, # No blank lines allowed after function docstring
    D212, # Multi-line docstring summary should start at the first line
    D401, # First line should be in imperative mood
    E402, # Module level import not at top of file
    W503, # Line break before binary operator

[isort]
line_length = 79
lines_between_types = 1
profile = black
remove_redundant_aliases = true
wrap_length = 79

[mypy]
# --strict
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
implicit_reexport = false
strict_equality = true
# --strict end
disallow_any_generics = false
# ignore_missing_imports = true

[tox:tox]
envlist =
    coverage
    bandit
    flake8
    mypy
    pytest
ignore_basepython_conflict = true
isolated_build = true
minversion = 3.20.0
skip_missing_interpreters = true

# testenv is used as a stub to define and reference global configuration of
# all testenvs that get created.
[testenv]
allowlist_externals = poetry
basepython = python3
setenv =
    PYTHONDONTWRITEBYTECODE=true
    PYTHONPYCACHEPREFIX=/tmp
    PYTHONUNBUFFERED=true
skip_install = true

[docker:postgres]
image = postgres:13-alpine
environment =
    POSTGRES_DB=flexmetal
    POSTGRES_PASSWORD=flexmetal
    POSTGRES_USER=flexmetal
ports =
    5432:5432/tcp

[docker:redis]
image = redis:6-alpine
ports =
    6379:6379/tcp

[testenv:lint]
commands =
    {[testenv:bandit]commands}
    {[testenv:flake8]commands}
    {[testenv:mypy]commands}

[testenv:test]
commands =
    #{[testenv:coverage]commands}
    {[testenv:pytest]commands}
docker =
    {[testenv:pytest]docker}
passenv = *
setenv =
    #{[testenv:coverage]setenv}
    {[testenv:pytest]setenv}
skip_install = false

[testenv:bandit]
commands =
    poetry run bandit --version
    poetry run bandit -qc {toxinidir}/.bandit.yml -r ccp_api/

# [testenv:coverage]
# commands =
#     poetry run coverage --version

[testenv:flake8]
commands =
    poetry run flake8 --version
    poetry run flake8 ccp_api/

[testenv:mypy]
allowlist_externals = mypy
commands =
    poetry run mypy --version
    poetry run mypy ccp_api/
deps =
    mypy==0.910

[testenv:pytest]
allowlist_externals = pytest
commands =
    pytest --version
    pytest {toxinidir}
deps =
    alembic==1.7.3
    celery==5.1.2
    click>=7.0,<8.0
    fastapi[all]==0.70.0
    flower==1.0.0
    orjson==3.6.0
    pytest==6.2.4
    psycopg2==2.9.1
    redis==3.5.3
    sqlalchemy==1.4.23
    uvicorn==0.14.0
docker =
    postgres
    redis
passenv = *
setenv =
    CELERY_BROKER_URL=redis://localhost:6379/0
    CELERY_RESULT_BACKEND=redis://localhost:6379/0
    POSTGRES_HOST=localhost
    POSTGRES_PORT=5432
    POSTGRES_DB=snagem
    POSTGRES_PASSWORD=snagem
    POSTGRES_USER=snagem
skip_install = false
