# SPDX-License-Identifier: AGPL-3.0-or-later
---
name: Lint

on:
  pull_request:
    paths:
      - .github/workflows/lint.yaml
      - poetry.lock
      - pyproject.toml
      - setup.cfg
      - snag/**/*.py
      - snagd/**/*.py
      - snagd/db/alembic/script.py.mako
  push:
    paths:
      - .github/workflows/lint.yaml
      - poetry.lock
      - pyproject.toml
      - setup.cfg
      - snag/**/*.py
      - snagd/**/*.py
      - snagd/db/alembic/script.py.mako
  workflow_dispatch:

jobs:
  lint:
    strategy:
      matrix:
        include:
          - name: bandit
          - name: flake8
          - name: mypy

    name: ${{ matrix.name }}
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Setup venv cache
        uses: actions/cache@v2
        id: cache-venv
        with:
          key: venv-${{ matrix.name }}-${{ runner.os }}-${{ hashFiles('poetry.lock') }}
          path: .venv

      - name: Setup Tox cache
        uses: actions/cache@v2
        id: cache-tox
        with:
          key: tox-${{ matrix.name }}-${{ runner.os }}-${{ hashFiles('poetry.lock', 'setup.cfg') }}
          path: .tox/${{ matrix.name }}

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y git libpq-dev libsqlite3-dev

      - name: Install ${{ matrix.name }}
        run: |
          [ -d venv ] || python -m venv .venv
          source .venv/bin/activate
          # FIXME: poetry>=1.2,<2 once released
          pip install poetry==1.2.0b1
          poetry install --only tox

      - name: Run ${{ matrix.name }}
        run: poetry run tox -e ${{ matrix.name }}
