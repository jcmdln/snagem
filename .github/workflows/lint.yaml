# SPDX-License-Identifier: AGPL-3.0-or-later
---
name: Lint

on:
  pull_request:
    paths:
      - .github/workflows/lint.yaml
      - poetry.lock
      - pyproject.toml
      - setup.cfg
      - snag/**/*.py
      - snagd/**/*.py
      - snagd/db/alembic/script.py.mako
  push:
    paths:
      - .github/workflows/lint.yaml
      - poetry.lock
      - pyproject.toml
      - setup.cfg
      - snag/**/*.py
      - snagd/**/*.py
      - snagd/db/alembic/script.py.mako
  workflow_dispatch:

jobs:
  lint:
    strategy:
      matrix:
        include:
          - name: bandit
          - name: flake8
          - name: mypy

    name: ${{ matrix.name }}
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        with:
          python-version: "3.7"
          cache: "pip"
          cache-dependency-path: |
            poetry.lock
            setup.cfg

      - name: Setup venv cache
        uses: actions/cache@v3
        id: cache-venv
        with:
          key: venv-${{ matrix.name }}-${{ hashFiles('poetry.lock') }}
          path: .venv

      - name: Setup Tox cache
        uses: actions/cache@v3
        id: cache-tox
        with:
          key: tox-${{ matrix.name }}-${{ hashFiles('poetry.lock', 'setup.cfg') }}
          path: .tox/${{ matrix.name }}

      - name: Install system packages
        run: sudo apt-get update && sudo apt-get install -y git libpq-dev libsqlite3-dev

      # FIXME: poetry>=1.2,<2 once released
      - name: Install Poetry
        run: pip install poetry==1.2.0b1

      - name: Install ${{ matrix.name }}
        run: poetry install --only tox

      - name: Run ${{ matrix.name }}
        run: poetry run tox -e ${{ matrix.name }}
