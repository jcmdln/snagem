---
name: Lint

on:
  pull_request:
    paths:
      - .github/workflows/lint.yml
      - poetry.lock
      - pyproject.toml
      - snagem/**/*.py
      - snagem/db/alembic/script.py.mako
      - tox.ini
  push:
    paths:
      - .github/workflows/lint.yml
      - poetry.lock
      - pyproject.toml
      - snagem/**/*.py
      - snagem/db/alembic/script.py.mako
      - tox.ini
  workflow_dispatch:

jobs:
  lint:
    strategy:
      fail-fast: false
      matrix:
        linter: ["mypy", "pip-audit", "pytest", "ruff"]
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11"]

    name: ${{ matrix.linter }}-${{ matrix.python-version }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: poetry.lock

      - name: Setup venv cache
        uses: actions/cache@v3
        id: cache-venv
        with:
          key: >-
            venv-${{
            matrix.linter }}-${{
            matrix.python-version }}-${{
            matrix.os }}-${{
            hashFiles('poetry.lock') }}
          path: .venv

      - name: Setup Tox cache
        uses: actions/cache@v3
        id: cache-tox
        with:
          key: >-
            tox-${{
            matrix.linter }}-${{
            matrix.python-version }}-${{
            matrix.os }}-${{
            hashFiles('poetry.lock', 'tox.ini') }}
          path: .tox/${{ matrix.linter }}

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y git libhiredis-dev libpq-dev libsqlite3-dev

      - name: Install Poetry
        run: pip install "poetry>=1.2.0"

      - name: Install ${{ matrix.linter }}
        run: poetry install --only tox

      - name: Run ${{ matrix.linter }}
        run: poetry run tox -e ${{ matrix.linter }}
