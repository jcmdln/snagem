import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
branch_labels = None
create_date = "2023-02-20 22:24:31.490819+00:00"
depends_on = None
down_revision = None
revision = "1627ae0a98d2"


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "media",
        sa.Column("uuid", sa.String(), nullable=False),
        sa.Column("source_url", sa.String(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("duration", sa.Integer(), nullable=False),
        sa.Column("subtitles", sa.String(), nullable=True),
        sa.Column("categories", sa.String(), nullable=True),
        sa.Column("tags", sa.String(), nullable=True),
        sa.Column("views", sa.Integer(), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=False),
        sa.Column("date_updated", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("uuid"),
    )
    op.create_table(
        "setting",
        sa.Column("uuid", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("value", sa.String(), nullable=False),
        sa.Column("date_updated", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("uuid"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("uuid"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("setting")
    op.drop_table("media")
    # ### end Alembic commands ###
